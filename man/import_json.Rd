% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_data_model.R
\name{import_json}
\alias{import_json}
\alias{json_to_dm}
\alias{json_to_dbml}
\title{Import data from json file}
\usage{
json_to_dm(json)

json_to_dbml(json, dbml)
}
\arguments{
\item{json}{Character vector with paths to json files. If more than one file is provided, they will be combined into a single data model.}

\item{dbml}{Path for the DBML output file}
}
\value{
\code{\link{dm}} object
}
\description{
Import data model in json format
}
\details{
\code{json_to_dm} returns a \code{\link{dm}} object.

\code{json_to_dbml} writes a \href{https://www.dbml.org}{DBML} file.

json files to be imported should contain a list "tables". Each table object should
contain the following elements: 
\itemize{
  \item{table: }{table name}
  \item{columns: }{list of "column" objects}
  \item{required: }{TRUE indicates the table is required, FALSE or missing if the table
   is optional. 'CONDITIONAL (t1)' indicates that a table is only required if table 't1' is 
   present.}
}

Each column object can contain the following elements. 'column' and 'data_type' are required.
\itemize{
  \item{column: }{column name}
  \item{data_type: }{"string", "boolean, "integer", "float", "date", "dateTime", or "enumeration"}
  \item{enumerations: }{if data_type is enumeration, list values here}
  \item{multi_value_delimiter: }{if data values may be delimited, this contains the delimiter value}
  \item{required: }{TRUE indicates the column is required, FALSE or missing if the column
   is optional. 'CONDITIONAL (column = value)' indicates a requirement only if any element of 
   'column' contains 'value'.}
  \item{primary_key: }{logical where TRUE indicates the column is a primary key, 
    other values may be FALSE or missing}
  \item{references: }{Reference to other columns in the data model. Either 
    1) a cross-table reference string following the 
    \href{https://www.dbml.org/docs/#relationships-foreign-key-definitions}{DBML}
    format, or 
    2) 'from:' followed by a comma-separated list of columns used to
    automatically generate this column using a hash function.}
  \item{description: }{Note string (column description) following the
    \href{https://www.dbml.org/docs/#column-notes}{DBML} format}
}
}
\examples{
json <- system.file("extdata", "data_model.json", package="AnvilDataModels")
(dm <- json_to_dm(json))
attr(dm, "required")
lapply(dm, attr, "required")

tmp <- tempfile()
json_to_dbml(json, tmp)
readLines(tmp, n=14)

unlink(tmp)

json <- system.file("extdata", "data_model_conditional.json", package="AnvilDataModels")
(dm <- json_to_dm(json))
attr(dm, "conditions")
lapply(dm, attr, "conditions")

}
