% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_data_tables.R
\name{check_data_tables}
\alias{check_data_tables}
\alias{read_data_tables}
\alias{check_table_names}
\alias{check_column_names}
\alias{check_column_types}
\title{Check tables against data model}
\usage{
read_data_tables(files, table_names = names(files), quiet = TRUE)

check_table_names(tables, model)

check_column_names(tables, model)

check_column_types(tables, model)
}
\arguments{
\item{files}{Vector of file paths, one per data table.}

\item{table_names}{Vector of table names associated with \code{files}.}

\item{quiet}{Logical to control printing results of column parsing from \code{\link{read_tsv}}.}

\item{tables}{Named list of data tables}

\item{model}{\code{\link{dm}} object describing data model}
}
\value{
\code{read_data_tables} returns a named list of data frames.

\code{check_table_names} returns \code{NULL} if \code{tables} matches \code{model}, 
    or a list:
    \itemize{
        \item{missing_tables: }{Vector of tables in \code{model} but not in \code{tables}}
        \item{extra_tables: }{Vector of tables in \code{tables} but not in \code{model}}
    }

\code{check_column_names} return a list of all tables in common between data 
    and model. Each table element is \code{NULL} if columns in \code{tables} matches \code{model}, 
    or a list:
    \itemize{
        \item{missing_columns: }{Vector of columns in \code{model} but not in \code{tables}}
        \item{extra_columns: }{Vector of columns in \code{tables} but not in \code{model}}
    }

\code{check_column_types} returns a list of all tables in common between data 
    and model. Each table element is a list of all columns in common between table and 
    model. Each column element is \code{NULL} if values in column are a compatible type 
    with the data model, or a string describing the mismatch.
}
\description{
Read a set of files containing data tables and check them against a data model.
}
\examples{
# read data model
tsv <- system.file("extdata", "data_model.tsv", package="AnvilDataModels")
model <- tsv_to_dm(tsv)

# read tables to check
table_names <- c("subject", "phenotype", "sample", "file")
files <- system.file("extdata", paste0(table_names, ".tsv"), package="AnvilDataModels")
names(files) <- table_names
tables <- read_data_tables(files)

check_table_names(tables, model)
check_column_names(tables, model)
check_column_types(tables, model)

}
